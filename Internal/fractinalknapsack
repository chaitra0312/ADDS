import java.util.*;

class Item {  
    int profit, weight;
    double ratio;

    Item(int profit, int weight) {
        this.profit = profit;
        this.weight = weight;
        this.ratio = (double) profit / weight;
    }
}

public class GreedyFractionalKnapsack {
    public static double getMaxprofit(Item[] items, int m) {
        Arrays.sort(items, (a, b) -> Double.compare(b.ratio, a.ratio));
        double maxprofit = 0.0;
        System.out.println("Items placed in the bag:");
        
        for (Item item : items) {
            if (item.weight <= m) {
                maxprofit += item.profit;
                System.out.println("Weight: " + item.weight + ", Profit: " + item.profit);
                m -= item.weight;
            } else {
                double fraction = (double) m / item.weight;
                maxprofit += item.profit * fraction;
                System.out.println("Weight: " + (item.weight * fraction) + ", Profit: " + (item.profit * fraction) + ", Fraction: " + (fraction * 100) + "%");
                break;
            }
        }
        return maxprofit;
    }

    public static void main(String[] args) {  
        Item[] items = { new Item(6, 2), new Item(5, 3), new Item(8, 4), new Item(4, 1) };  
        int m = 5; // Smaller knapsack capacity
        double maxprofit = getMaxprofit(items, m);
        System.out.println("Maximum profit in Knapsack: " + maxprofit);
    }
}
